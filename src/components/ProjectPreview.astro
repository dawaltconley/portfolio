---
import type { CollectionEntry } from 'astro:content';
import type { DataIcon } from '@data/icons';
import ProjectPreview from '@components/ProjectPreview';
import { getMetadata } from '@build/fetch';
import { getIcon } from '@data/icons';

export interface Props {
  project: CollectionEntry<'projects'>;
}

const images = import.meta.glob<string>('../assets/images/**', {
  import: 'default',
});

const project = Astro.props.project;
const { title, url, tags, published } = project.data;
let imageUrl = `../assets/images/${project.data.image}`;
const image = images[imageUrl]
  ? await images[imageUrl]()
  : (await getMetadata(new URL(url))).image;
const projectUrl = published ? `/projects/${project.slug}` : url;
const projectIcons = tags
  .map((tag) => getIcon(tag))
  .filter((i): i is DataIcon => Boolean(i));
---

<ProjectPreview
  title={title}
  url={projectUrl}
  image={image}
  icons={projectIcons}
>
  <slot />
</ProjectPreview>
