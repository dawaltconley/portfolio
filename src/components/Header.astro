---
import ThemeControls from './ThemeControls';
import IconLink from './IconLink.astro';
import FontAwesome from './FontAwesome.astro';
import { faBrush, faSun, faMoon } from '@fortawesome/pro-solid-svg-icons';

export interface Props {
  links?: string[];
  class?: string;
}

const { links, class: className } = Astro.props;
---

<div class={`w-full py-4 ${className ?? ''}`}>
  <div class="container mx-auto flex h-full items-center text-xl">
    <ThemeControls themes={2} class="mr-auto" client:idle>
      <FontAwesome slot="iconTheme" icon={faBrush} />
      <FontAwesome slot="iconLight" icon={faSun} />
      <FontAwesome slot="iconDark" icon={faMoon} />
    </ThemeControls>
    {
      links &&
        links.map((url) => (
          <IconLink
            url={url}
            type="fa"
            class="spotlight-button -my-2 box-content p-2"
          />
        ))
    }
  </div>
</div>

<script is:inline>
  document.documentElement.dataset.theme = window.localStorage.getItem('theme');
  document.documentElement.dataset.colorScheme =
    window.localStorage.getItem('colorScheme');
</script>

<style is:global lang="scss">
  @use 'sass:color';
  @use 'sass-themes' as themes;

  // no-js fallback
  html {
    @include themes.create(
      $text: black,
      $bg: white,
      $brand: theme('colors.rose.600'),
      $accessibility: false
    );

    @media (prefers-color-scheme: dark) {
      @include themes.create(
        $text: white,
        $bg: theme('colors.zinc.900'),
        $brand: theme('colors.rose.500'),
        $accessibility: false,
        $styles: false
      );
    }
  }

  [data-theme='0'] {
    &[data-color-scheme='light'],
    & .theme-light {
      @include themes.create(
        $text: black,
        $bg: white,
        $brand: theme('colors.rose.600'),
        $accessibility: false
      );
    }
    &[data-color-scheme='dark'],
    & .theme-dark {
      @include themes.create(
        $text: white,
        $bg: theme('colors.zinc.900'),
        $brand: theme('colors.rose.500'),
        $accessibility: false
      );
    }
    &[data-color-scheme='light'] .theme-brand {
      @include themes.create(
        $text: white,
        $bg: theme('colors.rose.600'),
        $brand: white,
        $accessibility: false
      );
    }
    &[data-color-scheme='dark'] .theme-brand {
      @include themes.create(
        $text: white,
        $bg: theme('colors.rose.500'),
        $brand: white,
        $accessibility: false
      );
    }
  }

  [data-theme='1'] {
    $brand: color.change(#add, $lightness: 32%, $saturation: 84%);
    &[data-color-scheme='light'] {
      @include themes.create(
        $text: hsl(206deg, 69%, 22%),
        $bg: white,
        $brand: $brand,
        $accessibility: false
      );
    }
    &[data-color-scheme='dark'] {
      @include themes.create(
        $text: white,
        $bg: hsl(206deg, 69%, 15%),
        $brand: $brand,
        $accessibility: false
      );
    }
    &[data-color-scheme] .theme-brand {
      @include themes.create(
        $text: white,
        $bg: $brand,
        $brand: white,
        $accessibility: false
      );
    }
  }
</style>
