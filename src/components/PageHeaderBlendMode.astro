---
export interface Props {
  class?: string;
  tag?: 'header' | 'div';
}

const { tag, class: className } = Astro.props;
const Wrapper = tag ?? 'div';
---

<Wrapper class={`page-header ${className ?? ''}`}>
  <slot />
</Wrapper>

<style lang="scss">
  @use 'scss-properties' as props;

  .page-header {
    --height: 20vw;
    position: relative;
    min-height: var(--height);

    &::before,
    &::after {
      content: '';
      @apply fixed top-0 left-0 w-full;
      height: var(--height);
      pointer-events: none;
    }

    &::before {
      z-index: -1;
      background-color: props.set(
        --theme-br,
        $hue: adjust -180deg,
        $lightness: change calc(100% - var(--theme-br-l))
      );
      @supports (color: color(display-p3 1 1 1)) {
        @media (color-gamut: p3) {
          --colorspace: display-p3;
          background-color: color(
            var(--colorspace) calc((255 - var(--theme-br-r)) / 255)
              calc((255 - var(--theme-br-g)) / 255)
              calc((255 - var(--theme-br-b)) / 255)
          );
        }
        @media (color-gamut: rec2020) {
          --colorspace: rec2020;
        }
      }
      /* clip-path: polygon(0 5%, 0 100%, 80% 100%); */
      /* clip-path: polygon(0 0, 100% 0, 100% 100%, 90% 100%); */
      clip-path: polygon(100% 0, 0 0, 0 100%, 0% 90%);
    }

    &::after {
      background-color: white;
      mix-blend-mode: difference;
      /* clip-path: polygon(0 2%, 0 0, 100% 0, 100% 100%, 80% 100%); */
      clip-path: polygon(100% 2%, 100% 0, 0 0, 0 100%, 0% 100%);
    }
  }

  .clip-path {
    --clip-path: 100% 2%, 100% 0, 0 0, 0 100%, 0% 100%;
    clip-path: polygon(var(--clip-path));
  }
</style>
