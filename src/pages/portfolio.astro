---
import Layout from '../layouts/Base.astro';
import Project from '../components/ProjectPreview.astro';
import { getCollection } from 'astro:content';
import { tags, getExcerpt } from '../data/projects';

import IconLink from '../components/IconLink.astro';

const projects = await getCollection('projects');
---

<Layout title="My projects">
  <div class="site-header fixed flex flex-col pt-[10vw]">
    <header class="container mx-auto mt-auto mb-8 px-4 font-serif">
      <h1 class="mb-2 text-7xl font-semibold leading-[0.85]">
        Dylan Awalt-Conley
      </h1>
      <p class="text-3xl font-medium">
        Some of my websites and JavaScript things.
      </p>
    </header>
  </div>
  <main class="relative z-10 bg-theme-bg">
    <ul class="container mx-auto grid grid-cols-2 gap-4 px-4 py-8">
      {
        projects
          .filter((project) => project.data.image)
          .map(async (project) => (
            <Project project={project}>
              <p>{getExcerpt(project)}</p>
            </Project>
          ))
      }
    </ul>
  </main>
  <footer class="space-x-2 p-4">
    {
      Array.from(tags).map((tag) => (
        <IconLink id={tag} type="skill" inline={true} />
      ))
    }
  </footer>
</Layout>

<style lang="scss">
  @use 'scss-properties' as props;

  .site-header {
    --height: 20vw;
    position: relative;
    min-height: var(--height);

    &::before,
    &::after {
      content: '';
      @apply fixed top-0 left-0 w-full;
      height: var(--height);
      pointer-events: none;
    }

    &::before {
      z-index: -1;
      background-color: props.set(
        --theme-br,
        $hue: adjust -180deg,
        $lightness: change calc(100% - var(--theme-br-l))
      );
      /* clip-path: polygon(0 5%, 0 100%, 80% 100%); */
      /* clip-path: polygon(0 0, 100% 0, 100% 100%, 90% 100%); */
      clip-path: polygon(100% 0, 0 0, 0 100%, 0% 90%);
    }

    &::after {
      background-color: white;
      mix-blend-mode: difference;
      /* clip-path: polygon(0 2%, 0 0, 100% 0, 100% 100%, 80% 100%); */
      clip-path: polygon(100% 2%, 100% 0, 0 0, 0 100%, 0% 100%);
    }
  }
</style>
