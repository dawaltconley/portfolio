---
import '@styles/icons.scss';
import Layout from '@layouts/Base.astro';
import PageHeader from '@components/PageHeader.astro';
import ProjectGrid, { ProjectPreviewData } from '@components/ProjectGrid';
import {
  getExcerpt,
  generateImages,
  getPreviewLinks,
  getIconsFromTags,
} from '@data/projects';
import { getCollection } from 'astro:content';

const projects = await getCollection('projects');

const projectPreviews: ProjectPreviewData[] = await Promise.all(
  projects.map(async (project) => {
    const sizes =
      '(min-width: 1536px) 484px, (min-width: 1280px) 399px, (min-width: 1024px) 476px, (min-width: 768px) 348px, (min-width: 640px) 284px, 100vw';
    const images = await generateImages(project, sizes);

    return {
      ...project.data,
      id: project.slug,
      links: getPreviewLinks(project),
      images: images,
      excerpt: getExcerpt(project),
      icons: getIconsFromTags(project),
    };
  })
);
---

<Layout title="My projects">
  <PageHeader
    tag="header"
    class="-mt-14 flex flex-col pt-14 font-serif"
    layerClass="title-heavy-shadow theme-brand layer-border"
  >
    <h1
      class="my-name container mx-auto mb-2 mt-auto text-7xl font-semibold leading-[0.9]"
    >
      <span class="my-name__first">Dylan</span>
      <span class="my-name__last-1"
        >Awalt<span class="my-name__hyphen">-</span></span
      ><span class="my-name__last-2">Conley</span>
    </h1>
    <p class="container mx-auto mb-8 text-3xl font-medium">
      Some of my websites and JavaScript things.
    </p>
  </PageHeader>
  <main class="container mx-auto">
    <ProjectGrid
      client:load
      projects={projectPreviews}
      filter="website"
      slideshowInterval={10000}
    />
  </main>
</Layout>

<style lang="scss" is:global>
  @media (max-width: 450px) {
    .my-name__first,
    .my-name__last-1,
    .my-name__last-2 {
      display: block;
    }
    .my-name__first {
      text-align: left;
    }
    .my-name__last-1 {
      text-align: center;
    }
    .my-name__last-2 {
      text-align: right;
    }
  }

  .title-heavy-shadow {
    [data-color-scheme='light'] & * {
      text-shadow: 0.05em 0.05em 0px var(--theme-tx);
    }
    [data-color-scheme='dark'] & * {
      text-shadow: 0.05em 0.05em 0px var(--theme-bg);
    }
  }

  .layer-border {
    border-bottom-style: solid;
    border-bottom-width: 2px;
    border-bottom-color: var(--theme-tx);
    margin-bottom: -2px;
  }
</style>
