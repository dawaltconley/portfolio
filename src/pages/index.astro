---
import type { ImageProps } from '@components/Image';
import '@styles/icons.scss';
import Layout from '@layouts/Base.astro';
import PageHeader from '@components/PageHeader.astro';
import ProjectGrid, { ProjectPreviewData } from '@components/ProjectGrid';
import IconLink from '@components/IconLink';
import imageConfig from '@build/image-config';
import { tags, getExcerpt, resolvePath } from '@data/projects';
import { getIcon, DataIcon } from '@data/icons';
import { getCollection } from 'astro:content';

const projects = await getCollection('projects');

const projectPreviews: ProjectPreviewData[] = await Promise.all(
  projects.map(async (project) => {
    const { images, links, tags, published } = project.data;

    const sizes =
      '(min-width: 1536px) 484px, (min-width: 1280px) 399px, (min-width: 1024px) 476px, (min-width: 768px) 348px, (min-width: 640px) 284px, 100vw';
    const imageProps: ImageProps[] | undefined = images
      ? await Promise.all(
          images
            .map((image) =>
              typeof image === 'object' ? image : { src: image, alt: '' }
            )
            .map(async ({ src, alt }) => ({
              metadata: await imageConfig.metadataFromSizes(
                await resolvePath(src),
                {
                  sizes,
                }
              ),
              sizes,
              alt,
            }))
        )
      : undefined;

    if (published) links.unshift(`/projects/${project.slug}`);
    return {
      ...project.data,
      id: project.slug,
      links,
      images: imageProps,
      excerpt: getExcerpt(project),
      icons: tags
        .map((tag) => getIcon(tag))
        .filter((i): i is DataIcon => Boolean(i)),
    };
  })
);
---

<Layout title="My projects">
  <PageHeader
    tag="header"
    class="-mt-14 flex flex-col pt-14 font-serif"
    layerClass="title-heavy-shadow theme-brand layer-border"
  >
    <h1
      class="container mx-auto mb-2 mt-auto text-7xl font-semibold leading-[0.85]"
    >
      Dylan Awalt-Conley
    </h1>
    <p class="container mx-auto mb-8 text-3xl font-medium">
      Some of my websites and JavaScript things.
    </p>
  </PageHeader>
  <main class="container mx-auto">
    <ProjectGrid projects={projectPreviews} filter="website" client:load />
  </main>
  <footer class="space-x-2 p-4">
    {
      Array.from(tags).map((tag) => {
        const icon = getIcon(tag);
        return (
          icon &&
          icon.style.skill && (
            <IconLink
              icon={icon.style.skill}
              title={icon.name}
              url={icon.url}
              class="icon-component--skill inline-block"
              data-icon={tag}
            />
          )
        );
      })
    }
  </footer>
</Layout>

<style lang="scss" is:global>
  .title-heavy-shadow {
    [data-color-scheme='light'] & * {
      text-shadow: 0.05em 0.05em 0px var(--theme-tx);
    }
    [data-color-scheme='dark'] & * {
      text-shadow: 0.05em 0.05em 0px var(--theme-bg);
    }
  }

  .layer-border {
    border-bottom-style: solid;
    border-bottom-width: 2px;
    border-bottom-color: var(--theme-tx);
    margin-bottom: -2px;
  }
</style>
