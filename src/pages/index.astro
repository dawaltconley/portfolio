---
import '@styles/icons.scss';
import Layout from '@layouts/Base.astro';
import Header from '@components/Header.astro';
import PageHeader from '@components/PageHeader.astro';
import ProjectGrid, { ProjectPreviewData } from '@components/ProjectGrid';
import IconLink from '@components/IconLink';
import { getMetadata } from '@build/fetch';
import { tags, getExcerpt } from '@data/projects';
import { getIcon, DataIcon } from '@data/icons';
import { getCollection } from 'astro:content';

const projects = await getCollection('projects');

const contactLinks = [
  'https://github.com/dawaltconley',
  'https://www.linkedin.com/in/dawaltconley/',
];

const images = import.meta.glob<string>('../assets/images/**', {
  import: 'default',
});

const projectPreviews: ProjectPreviewData[] = await Promise.all(
  projects.map(async (project) => {
    const { url, tags, published } = project.data;
    let imageUrl = `../assets/images/${project.data.image}`;
    const image = images[imageUrl]
      ? await images[imageUrl]()
      : (await getMetadata(new URL(url))).image;
    return {
      ...project.data,
      image: image,
      excerpt: getExcerpt(project),
      url: published ? `/projects/${project.slug}` : url,
      icons: tags
        .map((tag) => getIcon(tag))
        .filter((i): i is DataIcon => Boolean(i)),
    };
  })
);
---

<Layout title="My projects">
  <Header links={contactLinks} class="theme-brand" />
  <PageHeader
    tag="header"
    class="page-header flex flex-col font-serif"
    layerClass="title-heavy-shadow theme-brand"
    clipPath={[
      [0, 0.3],
      [0, 0],
      [1, 0],
      [1, 0.2],
      [0.78, 0.42],
      [0.58, 0.72],
      [0.18, 0.22],
    ]}
  >
    <h1
      class="container mx-auto mb-2 mt-auto text-7xl font-semibold leading-[0.85]"
    >
      Dylan Awalt-Conley
    </h1>
    <p class="container mx-auto mb-8 text-3xl font-medium">
      Some of my websites and JavaScript things.
    </p>
  </PageHeader>
  <main class="relative z-10 bg-theme-bg">
    <ProjectGrid projects={projectPreviews} filter="website" client:load />
  </main>
  <footer class="space-x-2 p-4">
    {
      Array.from(tags).map((tag) => {
        const icon = getIcon(tag);
        return (
          icon &&
          icon.style.skill && (
            <IconLink
              icon={icon.style.skill}
              title={icon.name}
              url={icon.url}
              class="icon-component--skill inline-block"
              data-icon={tag}
            />
          )
        );
      })
    }
  </footer>
</Layout>

<style lang="scss" is:global>
  .title-heavy-shadow {
    [data-color-scheme='light'] & * {
      text-shadow: 0.05em 0.05em 0px var(--theme-tx--base);
    }
    [data-color-scheme='dark'] & * {
      text-shadow: 0.05em 0.05em 0px var(--theme-bg--base);
    }
  }
</style>
